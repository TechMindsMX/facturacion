ext {
	springVersion = "4.0.3.RELEASE"
	groovyVersion = "2.3.10"
	facturacionConfigurationDir = "${System.getProperty('user.home')}/.factura/"
	currentEnvironment = project.hasProperty("environment") ? environment : "development"
}

buildscript {
	repositories { jcenter() }

	dependencies { classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4' }
}

apply plugin:"java"
apply plugin:'groovy'
apply plugin:'eclipse'

repositories {
	mavenCentral()
	mavenLocal()
	maven { url "http://trama.mx:8082/archiva/repository/snapshots" }
	maven { url "http://trama.mx:8082/archiva/repository/internal" }
}

apply plugin:"war"
war.archiveName "facturacion.war"
apply plugin:"jetty"
httpPort=8081
apply plugin: 'tomcat'
tomcat { httpPort = 8081 }

dependencies {
	def tomcatVersion = '7.0.54'
	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
			"org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
	tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
		exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
	}

	providedCompile "javax.servlet:servlet-api:2.5"
	compile "log4j:log4j:1.2.17"
	compile 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.not-yet-commons-ssl:0.3.11_1'
	compile "org.codehaus.groovy:groovy-all:$groovyVersion"
	compile 'commons-io:commons-io:1.4'
	compile "org.springframework:spring-webmvc:$springVersion"
	compile "com.google.code.gson:gson:2.2.2"
	testCompile "junit:junit:4.12"
	testCompile "org.mockito:mockito-all:1.10.19"
	testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
	testCompile 'org.spockframework:spock-spring:0.7-groovy-2.0'
	testCompile 'org.springframework:spring-test:4.1.2.RELEASE'

	compile 'org.xhtmlrenderer:core-renderer:R8'
	compile 'com.lowagie:itext:2.1.0'
	compile files('libs/finkok-stamp-prod.jar')
	compile files('libs/finkok-cancel-prod.jar')
	compile files('libs/finkok-valida-prod.jar')
}

def filesToInclude = ["facturacion-${currentEnvironment}.properties"]
def toDirectory = 'src/main/resources'
task settingMainEnvironment(type:Copy){
	from facturacionConfigurationDir
	into toDirectory
	include filesToInclude
	rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
}

toDirectory = 'src/test/resources'
task settingTestEnvironment(type:Copy){
	from facturacionConfigurationDir
	into toDirectory
	include filesToInclude
	rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
}

task settingLog4jProperties(type:Copy){
	from "${System.getProperty('user.home')}/.factura/log4j-${currentEnvironment}.properties"
	into "src/main/resources/"
	rename { String fileName -> fileName.replace("-${currentEnvironment}", '') }
}

processResources.dependsOn "settingMainEnvironment", "settingTestEnvironment", "settingLog4jProperties"
