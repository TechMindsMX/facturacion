ext {
  facturacionConfigurationDir = "${System.getProperty('user.home')}/.timone/"
  currentEnvironment = project.hasProperty("environment") ? environment : "development"
}


buildscript {
  repositories {
    maven { url "https://repo.spring.io/libs-release" }
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.9.RELEASE")
  }
}

apply plugin: 'groovy'
apply plugin: 'spring-boot'

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://repo.spring.io/libs-release" }
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.3.6'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-actuator'

  testCompile 'junit:junit:4.11'
  testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
  testCompile 'org.spockframework:spock-spring:0.7-groovy-2.0'
  testCompile 'org.springframework:spring-test:4.1.2.RELEASE'

  compile 'org.xhtmlrenderer:core-renderer:R8'
  compile 'com.lowagie:itext:2.1.0'
}

test {
  systemProperty 'spring.config.name', "facturacion-${currentEnvironment}"
  systemProperty 'spring.config.location', facturacionConfigurationDir
}

tasks.withType(JavaExec) {
  systemProperty 'spring.config.name', "facturacion-${currentEnvironment}"
  systemProperty 'spring.config.location', facturacionConfigurationDir
}
